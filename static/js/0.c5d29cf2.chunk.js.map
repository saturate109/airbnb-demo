{"version":3,"sources":["components/Carousel.js"],"names":["useStyles","makeStyles","root","backgroundColor","boxShadow","cardActionArea","opacity","focusHighlight","cardContent","padding","imageOrientation","styles","paddingTop","cardMedia","borderWidth","borderColor","borderRadius","borderStyle","starIcon","fontSize","verticalAlign","marginRight","reviewRating","fontWeight","FavoriteTwoToneIcon","position","top","right","color","title","flexGrow","features","paddingLeft","display","desc","overflow","textOverflow","whiteSpace","radius0","sliderConfiguration","type","bound","rewind","perView","perSwipe","throttle","animationTimingFunc","animationDuration","gap","dragDistance","swipeThreshold","Counter","props","index","sets","length","content","Math","ceil","style","alignSelf","letterSpacing","BulletPoint","aria-hidden","ImgMediaCard","src","alt","noOfReviews","roundedBorders","showFavourite","classes","className","clsx","image","gutterBottom","component","Star","variant","map","feature","Carousel","cards","floatingNav","showNav","showCounter","configOverrides","useState","setIndex","setPerView","ref","useRef","useEffect","config","overrides","glide","Glide","current","on","previousPerView","settings","mount","destroy","data-glide-el","data-glide-dir","direction","card"],"mappings":"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","file":"static/js/0.c5d29cf2.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Glide from '@glidejs/glide';\nimport { SvgIcon } from '@material-ui/core';\nimport { Star } from '@material-ui/icons';\nimport FavoriteTwoToneIcon from '@material-ui/icons/FavoriteTwoTone';\nimport clsx from 'clsx';\nimport ArrowButton from 'components/elements/ArrowButton';\n\n// import component SCSS files\nimport 'assets/scss/carousel/glide.core.scss';\nimport 'assets/scss/carousel/glide.theme.scss';\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: 'transparent',\n    boxShadow: 'none',\n  },\n  cardActionArea: {\n    '&:hover $focusHighlight': {\n      opacity: 0,\n    },\n  },\n  focusHighlight: {},\n  cardContent: {\n    padding: '10px 0px 10px 0px',\n  },\n  imageOrientation: (styles) => ({\n    paddingTop: styles.paddingTop,\n  }),\n  cardMedia: {\n    borderWidth: '1px',\n    borderColor: '#a5a5a5',\n    borderRadius: '8px',\n    borderStyle: 'solid',\n  },\n  starIcon: {\n    fontSize: '1.2rem',\n    verticalAlign: 'middle',\n    marginRight: '2px',\n  },\n  reviewRating: { fontWeight: 400, fontSize: '0.9333rem' },\n  FavoriteTwoToneIcon: {\n    position: 'absolute',\n    top: '10px',\n    right: '10px',\n    color: '#ffffff',\n    fontSize: '1.8rem',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  features: {\n    paddingLeft: 0,\n    '& span': {\n      padding: '0 5px 0 5px',\n    },\n    '&>li': {\n      display: 'inline-block',\n    },\n  },\n  desc: {\n    display: 'block',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  radius0: {\n    borderRadius: 0,\n  },\n});\n\nconst sliderConfiguration = {\n  type: 'carousel',\n  bound: true,\n  rewind: true,\n  perView: 4,\n  perSwipe: '|',\n  throttle: 500,\n  animationTimingFunc: 'ease-in-out',\n  animationDuration: 500,\n  gap: 20,\n  dragDistance: false,\n  swipeThreshold: false,\n};\n\nfunction Counter(props) {\n  const { index, perView, length } = props;\n  const sets = length / perView;\n  const content =\n    perView === 0\n      ? '...'\n      : `${Math.ceil((index + 1) / perView)}/${Math.ceil(sets)}`;\n  return (\n    <span style={{ alignSelf: 'center', letterSpacing: '3px' }}>{content}</span>\n  );\n}\n\nfunction getStylesFromProps({ imageOrientation }) {\n  return imageOrientation === 'portrait'\n    ? { paddingTop: '133%' }\n    : { paddingTop: '66.6667%' };\n}\n\nfunction mergeConfig(config, overrides) {\n  return { ...config, ...overrides };\n}\n\nfunction BulletPoint() {\n  return <span aria-hidden=\"true\">Â·</span>;\n}\n\nfunction ImgMediaCard(props) {\n  const {\n    src,\n    alt,\n    desc = '',\n    features = [],\n    noOfReviews = null,\n    roundedBorders = true,\n    showFavourite = true,\n  } = props;\n  const styles = getStylesFromProps(props);\n  const classes = useStyles(styles);\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea\n        classes={{\n          root: classes.cardActionArea,\n          focusHighlight: classes.focusHighlight,\n        }}\n      >\n        {showFavourite && (\n          <FavoriteTwoToneIcon\n            classes={{ root: classes.FavoriteTwoToneIcon }}\n          />\n        )}\n        <CardMedia\n          className={clsx(\n            `${classes.cardMedia} ${classes.imageOrientation}`,\n            !roundedBorders && `${classes.radius0}`\n          )}\n          image={src}\n          title={alt}\n        />\n        <CardContent classes={{ root: classes.cardContent }}>\n          {noOfReviews > 0 && (\n            <Typography gutterBottom>\n              <SvgIcon\n                component={Star}\n                color=\"secondary\"\n                className={classes.starIcon}\n              />\n              <span className={classes.reviewRating}>{noOfReviews} review</span>\n            </Typography>\n          )}\n\n          {features && (\n            <Typography variant=\"body1\" component=\"div\">\n              <ol className={classes.features}>\n                {features.map((feature, index) => {\n                  return (\n                    <li key={index}>\n                      {index > 0 && <BulletPoint />}\n                      {feature}\n                    </li>\n                  );\n                })}\n              </ol>\n              {desc && <span className={classes.desc}>{desc}</span>}\n            </Typography>\n          )}\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nconst Carousel = (props) => {\n  const {\n    title,\n    cards,\n    imageOrientation = 'landscape',\n    floatingNav = false,\n    roundedBorders,\n    showFavourite,\n    showNav = true,\n    showCounter = true,\n    configOverrides,\n  } = props;\n  const [index, setIndex] = useState(0);\n  const [perView, setPerView] = useState(0);\n  const length = cards.length;\n  const ref = useRef();\n\n  useEffect(() => {\n    let glide = new Glide(\n      ref.current,\n      mergeConfig(sliderConfiguration, configOverrides)\n    );\n\n    glide.on('run', function () {\n      setIndex(glide.index);\n    });\n\n    glide.on('resize', function () {\n      if (!glide.previousPerView || glide.perView !== glide.settings.perView) {\n        glide.previousPerView = glide.settings.perView;\n        setPerView(glide.settings.perView);\n      }\n    });\n\n    glide.on('mount.after', function () {\n      setIndex(glide.index);\n      setPerView(glide.settings.perView);\n    });\n\n    glide.on('swipe.start', function () {\n      return false;\n    });\n\n    glide.mount();\n\n    return () => {\n      glide.destroy();\n    };\n  }, [configOverrides]);\n\n  return (\n    <>\n      <div className=\"glide\" ref={ref}>\n        <div\n          className={clsx(\n            'glide__arrows',\n            floatingNav && 'glide__floating_nav'\n          )}\n          data-glide-el=\"controls\"\n        >\n          {title && (\n            <Typography\n              component=\"h3\"\n              variant=\"h3\"\n              gutterBottom\n              style={{ flexGrow: 1 }}\n            >\n              {title}\n            </Typography>\n          )}\n          {showCounter && (\n            <Counter index={index} perView={perView} length={length} />\n          )}\n          <button\n            data-glide-dir=\"|<\"\n            className={clsx(\n              'glide__arrow',\n              'glide__arrow--left',\n              !showNav && 'glide__hide'\n            )}\n          >\n            <ArrowButton direction=\"previous\" />\n          </button>\n          <button\n            data-glide-dir=\"|>\"\n            className={clsx(\n              'glide__arrow',\n              'glide__arrow--right',\n              !showNav && 'glide__hide'\n            )}\n          >\n            <ArrowButton direction=\"next\" />\n          </button>\n        </div>\n        <div className=\"glide__track\" data-glide-el=\"track\">\n          <ul className={clsx('glide__slides', perView === 1 && 'glide__m0')}>\n            {cards.map((card, index) => (\n              <li className=\"glide__slide\" key={index}>\n                <ImgMediaCard\n                  imageOrientation={imageOrientation}\n                  roundedBorders={roundedBorders}\n                  showFavourite={showFavourite}\n                  {...card}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Carousel;\n"],"sourceRoot":""}